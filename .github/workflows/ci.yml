name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install cljstyle for tests
      run: |
        wget https://github.com/greglook/cljstyle/releases/download/0.15.0/cljstyle_0.15.0_linux.tar.gz
        tar -xzf cljstyle_0.15.0_linux.tar.gz
        chmod +x cljstyle
        sudo mv cljstyle /usr/local/bin/

    - name: Compile TypeScript
      run: npm run compile

    - name: Run VSCode Extension Tests
      run: |
        npm run pretest
        xvfb-run -a npm test
      env:
        NODE_ENV: test
        DISPLAY: ':99.0'

    - name: Build extension package
      if: matrix.node-version == '20.x'  # Only build once
      run: |
        npm install -g @vscode/vsce
        vsce package

    - name: Upload extension artifact
      if: matrix.node-version == '20.x'  # Only upload once
      uses: actions/upload-artifact@v4
      with:
        name: vscode-cljstyle-formatter
        path: "*.vsix"

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Check TypeScript compilation
      run: npm run compile

    - name: Check for TypeScript errors
      run: npx tsc --noEmit